name: CD

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: "Semantic version (e.g. v1.2.0)"
        required: true
      include-android:
        description: "Build Android?"
        required: false
        default: "true"
      include-ios:
        description: "Build iOS?"
        required: false
        default: "true"
      include-web:
        description: "Build Web?"
        required: false
        default: "true"

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_CHANNEL: stable
  CACHE_KEY: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

jobs:
  build:
    name: ðŸš€ Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: android
            os: ubuntu-latest
            run: "flutter build apk --release"
            artifact: "build/app/outputs/**/*.apk"
            when: ${{ github.event.inputs.include-android == 'true' }}
          - target: ios
            os: macos-latest
            run: "flutter build ios --simulator"
            artifact: "build/ios/ipa/**/*.app"
            needs-approval: true
            when: ${{ github.event.inputs.include-ios == 'true' }}
          - target: web
            os: ubuntu-latest
            run: "flutter build web --release"
            artifact: "build/web/"
            when: ${{ github.event.inputs.include-web == 'true' }}

    # skip any matrix entry where `when` is false
    if: matrix.when

    # require approval if iOS
    environment: ${{ matrix.needs-approval && 'production' || '' }}

    steps:
      - &checkout
        name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache pub (and Gradle for Android)
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle
          key: ${{ env.CACHE_KEY }}

      - &setup_flutter
        name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Install deps (offline)
        run: flutter pub get --offline

      - name: Build ${{ matrix.target }}
        run: ${{ matrix.run }}

      - name: Upload ${{ matrix.target }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-${{ github.event.inputs.release-tag }}
          path: ${{ matrix.artifact }}
